# List of all syscalls 
# Argument types:
# h      = char (8-bit)
# H      = short (16-bit)
# o      = void
# i      = 32-bit signed integer
# l      = 64-bit signed integer
# s      = NULL-terminated string
# S...=# = structure, name after =
# v      = vararg
#
# Argument qualifiers:
# p      = pointer
# u      = unsigned
# I      = copied on input
# O      = copied on output
# b[#]   = byte length of parameter #
# c[#]   = count of items in parameter #
# a[#]   = array of length #
#
# syscall_name      aliases         args

# file operations
pipe                _pipe           i(iOa[2])
open                _open           i(s,i,ui)
dup                 -               i(i)
dup2                -               i(i,i)
close               _close          i(i)
lseek               -               l(i,l,i)
sendto              -               i(i,opI,uib[1],SpI=sockaddr,uib[3])
sendmsg             -               i(i,SpI=msghdr,i)
recvfrom            -               i(i,opO,uib[1],i,SpIO=sockaddr,uipb3IO)
recvmsg             -               i(i,SpI=msghdr,i)
read                _read           i(i,opO,uib[1])
pread               -               i(i,opO,uib[1],l)
readv               _readv          i(i,SpI=iovec,ic[1])
preadv              -               i(i,SpI=iovec,ic[1],l)
write               _write          i(i,opI,uib[1])
pwrite              -               i(i,opI,uib[1],l)
writev              _writev         i(i,SpI=iovec,uic[1])
pwritev             -               i(i,SpI=iovec,uic[1],l)
__select50          ___select50     i(i,SpIO=fd_set,SpIO=fd_set,SpIO=fd_set,SpIO=timeval)
__pselect50         ___pselect50    i(i,SpIO=fd_set,SpIO=fd_set,SpIO=fd_set,SpIO=timeval,SpIO=sigset_t)
poll                _poll           i(SpIO=pollfd,uic[0],i)
__pollts50          ___pollts50     i(SpIO=pollfd,uic[0],SpI=timespec,SpI=sigset_t)
fcntl               _fcntl          i(i,i,v)
ioctl               -               i(i,ui,op)

chdir               -               i(s)
fchdir              -               i(i)
link                -               i(s,s)
symlink             -               i(s,s)
readlink            _readlink       i(s,hpO,uib[1])
mkdir               -               i(s,ui)
mkfifo              -               i(s,ui)
__mknod50           ___mknod50      i(s,ui,ul)
rename              -               i(s,s)
revoke              -               i(s)
truncate            -               i(s,l)
ftruncate           -               i(i,l)
undelete            -               i(s)
unlink              -               i(s)
rmdir               -               i(s)
umask               -               i(ui)
__getcwd            -               i(hpO,uib[0])

sync                -               Eo()
fdatasync           _fdatasync      i(i)
fsync               _fsync          i(i)
fsync_range         _fsync_range    i(i,i,l,l)
flock               -               i(i,i)

__stat50            ___stat50       i(s,SpO=stat)
__lstat50           ___lstat50      i(s,SpO=stat)
__fstat50           ___fstat50      i(i,SpO=stat)
statvfs1            -               i(s,SpO=statvfs)
fstatvfs1           -               i(i,SpO=statvfs)
pathconf            -               i(s,i)
fpathconf           -               i(i,i)

chflags             -               i(s,ui)
lchflags            -               i(s,ui)
fchflags            -               i(i,ui)
chmod               -               i(s,ui)
lchmod              -               i(s,ui)
fchmod              -               i(s,ui)
chown               -               i(s,ui,ui)
lchown              -               i(s,ui,ui)
fchown              -               i(i,ui,ui)

# socket operations
__socket30          -               i(i,i,i)
socketpair          -               i(i,i,iOa[2])
accept              _accept         i(i,SpIO=sockaddr,uipb1IO)
bind                -               i(i,SpI=sockaddr,uib[1])
connect             _connect        i(i,SpI=sockaddr,uib[1])
listen              -               i(i,i)

# get/set *id-related
getgid              -               Ei()
getegid             -               Ei()
getpgrp             -               Ei()
getpgid             -               Ei()
getpid              -               Ei()
getppid             -               Ei()
getsid              -               Ei()
getuid              -               Ei()
issetugid           -               Ei()
setpgid             -               i(ui,ui)
setregid            -               i(ui,ui)
setreuid            -               i(ui,ui)
setsid              -               i()
setuid              -               i(ui)
seteuid             -               i(ui)
setgid              -               i(ui)
setegid             -               i(ui)

# process-related
fork                _fork           i()
kill                _kill           i(ui,i)
chroot              -               i(s)
fchroot             -               i(i)
vfork               -               i()
__wait450           ___wait450      i(ui,ipO,i,SpO=rusage)
exit                _exit,_Exit     Ei(i)

# MMap-related
mlock               -               i(op,ui)
munlock             -               i(op,ui)
mlockall            -               i(i)
munlockall          -               i()
mmap                -               op(op,ui,i,i,i,l)
mprotect            -               i(op,ui,i)
mremap              -               op(op,ui,op,ui)
__msync13           msync           i(op,ui,i)
munmap              -               i(op,ui)
madvise             -               i(op,ui,i)
minherit            -               i(op,ui,i)

# signal functions
__sigaction14       -               i(i,SpI=sigaction,SpO=sigaction)
__sigaltstack14     -               i(SpI=stack_t,SpO=stack_t)
__sigpending14      -               i(SpO=sigset_t)
__sigprocmask14     -               i(i,SpI=sigset_t,SpO=sigset_t)
#__sigsuspend14      -               i(SpI=sigmask)

__msgctl50          ___msgctl50     i(i,i,SpIO=msqid_ds)
msgget              -               i(i,i)
msgrcv              _msgrcv         i(i,opO,uib[1],i,i)
msgsnd              _msgsnd         i(i,opI,uib[1],i)

____semctl50        -               i(i,i,i,v)
semget              -               i(i,i,i)
semop               -               i(i,SpIO=sembuf,uic[1])

shmat               -               i(i,op,i)
shmdt               -               i(op)
__shmctl50          -               i(i,i,SpIO=shmid_ds)
shmget              -               i(i,ui,i)

# misc
__adjtime50         -               i(SpI=timeval,SpO=timeval)
brk                 _brk            i(op)
getcontext          _getcontext     i(SpO=ucontext_t)
setcontext          -               i(SpI=ucontext_t)
__getdents30        -               i(i,hpO,uib[1])
getgroups           -               i(ic[1],uipO)
__getlogin          -               s()
__setlogin          -               i(s)
getpeername         -               i(i,SpO=sockaddr,uipb1IO)
__nanosleep50       ___nanosleep50  i(SpI=timespec,SpO=timespec)
reboot              -               i(i,s)
shutdown            -               i(i,i)
setgroups           -               i(ic[1],uipI)
getrlimit           -               i(i,SpO=rlimit)
setrlimit           -               i(i,SpI=rlimit)
__getrusage50       -               i(i,SpO=rusage)
syscall             -               i(i,v)
__syscall           -               l(l,v)
__posix_fadvise50   -               Ei(i,l,l,i)
access              -               i(s,i) 
acct                -               i(s)

# sbrk is not implemented in NetBSD, it uses brk()
#sbrk                _sbrk           i(i)
#
# execve and mincore will be implemented manually
# Unimplemented:
#__clone         clone               i(ppip      clone
#kqueue          kqueue              i()
#kevent          kevent              i(ib[0]L0B1L1p
#swapon          swapon              i(s
#clock_settime   clock_settime    
#clock_gettime
#clock_getres
#fhopen
#fhstat
#fhstatvfs
#fhstatvfs1
#mount
#unmount
#nfssvc
#getsockname
#getsockopt
#gettimeofday
#getvfsstat
#ktrace
#fktrace
#lfs_bmapv
#lfs_markv
#lfs_segclean
#lfs_segwait
#getpriority
#setpriority
#getitimer
#setitimer
#extattr
#lwp_*
#pmc_control
#pmc_get_info
#profil
#ptrace
#quotactl
#rasctl
#sa_enable
#sa_register
#sa_setconcurrency
#sa_stacks
#sa_yield
#__sigtimedwait
#sigwaitinfo
#sigwait
#swapctl
#sysarch
#__syscall
#timer_create
#timer_delete
#timer_settime
#utimes, lutimes, futimes
#utrace
#uuidgen
#
